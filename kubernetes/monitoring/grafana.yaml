apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
              name: http-grafana
          livenessProbe:
            tcpSocket:
              port: 3000
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /robots.txt
              port: 3000
            initialDelaySeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /etc/grafana
              name: grafana-config
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboards
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-config
          configMap:
            name: grafana-configmap
            items:
              - key: grafana.ini
                path: grafana.ini
              - key: datasource-prometheus.yaml
                path: provisioning/datasources/datasource-prometheus.yaml
              - key: dashboard-kube-state-metrics.yaml
                path: provisioning/dashboards/dashboard-kube-state-metrics.yaml
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards-configmap

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - port: 3000
      targetPort: http-grafana
  selector:
    app: grafana
